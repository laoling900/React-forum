{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHubCode\\\\s3820906-s3746272-a2\\\\react\\\\src\\\\components\\\\ForEachPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport UserContext from \"../contexts/UserContext\";\nimport { useContext } from \"react\";\nimport { createReaction, deletePost, deleteReaction, getOneReaction, getReactions, updateReaction } from \"../data/repository\";\nimport { useNavigate } from \"react-router-dom\";\nimport ForEachReply from \"./ForEachReply\";\nimport \"../css/ForEachPost.css\";\nimport NewReply from \"../fragments/NewReply\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ForEachPost(props) {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const navigate = useNavigate(); // Like& dislike reference: https://codepen.io/wangjieee/pen/eYJmwOp\n  //check the database count the likes and dislikes\n\n  const initialState = {\n    likes: 0,\n    dislikes: 0\n  };\n\n  const appReducer = (state, action) => {\n    switch (action.type) {\n      case \"handle_like\":\n        return { ...state,\n          likes: state.likes + action.payload\n        };\n\n      case \"handle_dislike\":\n        return { ...state,\n          dislikes: state.dislikes + action.payload\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const {\n    likes,\n    dislikes\n  } = state; //set the status of like and dislike\n\n  const [status, setStatus] = useState(null);\n  const [reactions, setReactions] = useState([]);\n  const [reaction, setReaction] = useState(null);\n  useEffect(() => {\n    async function loadReactions() {\n      //call the reactions from database\n      const currentReactions = await getReactions();\n      setReactions(currentReactions); //count like dislike init\n\n      let likecount = 0;\n      let dislikecount = 0;\n\n      for (const reaction of currentReactions) {\n        if (reaction.post_id === props.value.post_id) {\n          if (reaction.like === true) {\n            likecount += 1;\n          } else {\n            dislikecount += 1;\n          }\n        }\n      }\n\n      initialState.likes = likecount;\n      initialState.dislikes = dislikecount;\n      const currentReaction = await getOneReaction(user.user_id, props.value.post_id); //check \n\n      if (currentReaction !== null && currentReaction.like === true) {\n        setStatus(\"like\");\n      } else if (currentReaction !== null && currentReaction.dislike === true) {\n        setStatus(\"dislike\");\n      }\n\n      setReaction(currentReaction);\n    }\n\n    loadReactions();\n  }, []);\n\n  const handleClickLike = () => {\n    if (status === \"like\") {\n      //save to the database， should delete reaction\n      deleteReaction(user.user_id, props.value.post_id);\n      setStatus(null);\n      dispatch({\n        type: \"handle_like\",\n        payload: -1\n      });\n    } else {\n      if (status === \"dislike\") {\n        //save to the database， should update reaction\n        const newReaction = {\n          user_id: user.user_id,\n          like: true,\n          dislike: false,\n          post_id: props.value.post_id\n        };\n        updateReaction(newReaction);\n        dispatch({\n          type: \"handle_dislike\",\n          payload: -1\n        });\n      } else {\n        //save to the database， should create reaction\n        const newReaction = {\n          user_id: user.user_id,\n          like: true,\n          dislike: false,\n          post_id: props.value.post_id\n        };\n        createReaction(newReaction);\n      }\n\n      setStatus(\"like\");\n      dispatch({\n        type: \"handle_like\",\n        payload: 1\n      });\n    }\n  };\n\n  const handleClickDislike = () => {\n    if (status === \"dislike\") {\n      //save to the database, should delete reaction\n      deleteReaction(user.user_id, props.value.post_id);\n      setStatus(null);\n      dispatch({\n        type: \"handle_dislike\",\n        payload: -1\n      });\n    } else {\n      if (status === \"like\") {\n        //save to the database， should update reaction\n        const newReaction = {\n          user_id: user.user_id,\n          like: false,\n          dislike: true,\n          post_id: props.value.post_id\n        };\n        updateReaction(newReaction);\n        dispatch({\n          type: \"handle_like\",\n          payload: -1\n        });\n      } else {\n        //save to the database， should create reaction\n        const newReaction = {\n          user_id: user.user_id,\n          like: false,\n          dislike: true,\n          post_id: props.value.post_id\n        };\n        createReaction(newReaction);\n      }\n\n      setStatus(\"dislike\");\n      dispatch({\n        type: \"handle_dislike\",\n        payload: 1\n      });\n    }\n  };\n\n  const editPost = async post => {\n    navigate(\"/forum/EditPost\", {\n      state: {\n        p: post\n      }\n    });\n  };\n\n  const handleDeletePost = async postID => {\n    await deletePost(postID);\n    setShow(false); // props.resetUser();\n\n    navigate(\"/forum/myPost\");\n    navigate(0);\n  };\n\n  const toFollowPage = async () => {\n    navigate(\"/follow\", {\n      state: {\n        f: props.value.user\n      }\n    });\n  }; //each form post\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border my-3 p-3\",\n    children: [props.page === \"myPost\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/ava.png\",\n            alt: \"post-pic\",\n            className: \"ava\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"name\",\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), props.page === \"allPost\" && (props.value.user.user_id === user.user_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/ava.png\",\n            alt: \"post-pic\",\n            className: \"ava\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"name\",\n            children: user.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"followbutton\",\n      onClick: toFollowPage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/ava.png\",\n              alt: \"post-pic\",\n              className: \"ava\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"othername\",\n              children: props.value.user.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }, this)), props.value.post_delete === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"[**** This post has been deleted by the admin ***]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }, this), props.value.post_delete === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: props.value.post_text\n        },\n        className: \"eachPostText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.value.post_pictureURL !== null && /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"post img\",\n          style: {\n            maxHeight: \"100%\",\n            maxWidth: \"100%\",\n            width: \"auto\",\n            height: \"auto\"\n          },\n          src: props.value.post_pictureURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), props.page === \"allPost\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: status === \"like\" ? \"btnlike active\" : \"btnlike\",\n            onClick: handleClickLike,\n            children: [status === \"like\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons likeButton\",\n              children: \"thumb_up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: \"thumb_up_off_alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: likes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: status === \"dislike\" ? \"btnlike active \" : \"btnlike \",\n            onClick: handleClickDislike,\n            children: [status === \"dislike\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons disikeButton\",\n              children: \"thumb_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: \"thumb_down_off_alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: dislikes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, \"{props.value.post_id}\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this), props.page === \"allPost\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replydiv\",\n        children: /*#__PURE__*/_jsxDEV(NewReply, {\n          post_id: props.value.post_id,\n          replyTo_id: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), props.value.replies[0] !== null && props.value.replies.map(item => item.replyTo_id === null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply1Div\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ForEachReply, {\n            value: item,\n            replies: props.value.replies\n          }, item.reply_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this)), props.page === \"myPost\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \" edit material-icons md-36\",\n          onClick: () => editPost(props.value),\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete material-icons md-36\",\n          onClick: handleShow,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Delete Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Do you Confirm to delete this Post? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleDeletePost(props.value.post_id),\n          children: \"CONFIRM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForEachPost, \"1hqKukakyanQfZEmUlpl6u9wUBI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ForEachPost;\nexport default ForEachPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForEachPost\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Modal","Button","UserContext","useContext","createReaction","deletePost","deleteReaction","getOneReaction","getReactions","updateReaction","useNavigate","ForEachReply","NewReply","Col","Row","ForEachPost","props","user","show","setShow","handleClose","handleShow","navigate","initialState","likes","dislikes","appReducer","state","action","type","payload","dispatch","status","setStatus","reactions","setReactions","reaction","setReaction","loadReactions","currentReactions","likecount","dislikecount","post_id","value","like","currentReaction","user_id","dislike","handleClickLike","newReaction","handleClickDislike","editPost","post","p","handleDeletePost","postID","toFollowPage","f","page","user_name","post_delete","__html","post_text","post_pictureURL","maxHeight","maxWidth","width","height","replies","map","item","replyTo_id","reply_id"],"sources":["E:/GitHubCode/s3820906-s3746272-a2/react/src/components/ForEachPost.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport UserContext from \"../contexts/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  createReaction,\r\n  deletePost,\r\n  deleteReaction,\r\n  getOneReaction,\r\n  getReactions,\r\n  updateReaction,\r\n} from \"../data/repository\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ForEachReply from \"./ForEachReply\";\r\nimport \"../css/ForEachPost.css\";\r\nimport NewReply from \"../fragments/NewReply\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nfunction ForEachPost(props) {\r\n  const { user } = useContext(UserContext);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Like& dislike reference: https://codepen.io/wangjieee/pen/eYJmwOp\r\n  //check the database count the likes and dislikes\r\n  const initialState = {\r\n    likes: 0,\r\n    dislikes: 0,\r\n  };\r\n\r\n  const appReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"handle_like\":\r\n        return {\r\n          ...state,\r\n          likes: state.likes + action.payload,\r\n        };\r\n      case \"handle_dislike\":\r\n        return {\r\n          ...state,\r\n          dislikes: state.dislikes + action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { likes, dislikes } = state;\r\n\r\n  //set the status of like and dislike\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const [reactions, setReactions] = useState([]);\r\n  const [reaction, setReaction] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadReactions() {\r\n      //call the reactions from database\r\n      const currentReactions = await getReactions();\r\n      setReactions(currentReactions);\r\n      //count like dislike init\r\n      let likecount = 0;\r\n      let dislikecount = 0;\r\n      for (const reaction of currentReactions) {\r\n        if (reaction.post_id === props.value.post_id) {\r\n          if (reaction.like === true) {\r\n            likecount += 1;\r\n          } else {\r\n            dislikecount += 1;\r\n          }\r\n        }\r\n      }\r\n      initialState.likes = likecount;\r\n      initialState.dislikes = dislikecount;\r\n      const currentReaction = await getOneReaction(\r\n        user.user_id,\r\n        props.value.post_id\r\n      );\r\n\r\n      //check \r\n      if (currentReaction !== null && currentReaction.like === true) {\r\n        setStatus(\"like\");\r\n      } else if (currentReaction !== null && currentReaction.dislike === true) {\r\n        setStatus(\"dislike\");\r\n      }\r\n      setReaction(currentReaction);\r\n    }\r\n    loadReactions();\r\n  }, []);\r\n\r\n  const handleClickLike = () => {\r\n    if (status === \"like\") {\r\n      //save to the database， should delete reaction\r\n      deleteReaction(user.user_id, props.value.post_id);\r\n      setStatus(null);\r\n      dispatch({\r\n        type: \"handle_like\",\r\n        payload: -1,\r\n      });\r\n    } else {\r\n      if (status === \"dislike\") {\r\n        //save to the database， should update reaction\r\n        const newReaction = {\r\n          user_id: user.user_id,\r\n          like: true,\r\n          dislike: false,\r\n          post_id: props.value.post_id,\r\n        };\r\n        updateReaction(newReaction);\r\n        dispatch({\r\n          type: \"handle_dislike\",\r\n          payload: -1,\r\n        });\r\n      } else {\r\n        //save to the database， should create reaction\r\n        const newReaction = {\r\n          user_id: user.user_id,\r\n          like: true,\r\n          dislike: false,\r\n          post_id: props.value.post_id,\r\n        };\r\n        createReaction(newReaction);\r\n      }\r\n      setStatus(\"like\");\r\n      dispatch({\r\n        type: \"handle_like\",\r\n        payload: 1,\r\n      });\r\n    }\r\n  };\r\n  const handleClickDislike = () => {\r\n    if (status === \"dislike\") {\r\n      //save to the database, should delete reaction\r\n      deleteReaction(user.user_id, props.value.post_id);\r\n      setStatus(null);\r\n      dispatch({\r\n        type: \"handle_dislike\",\r\n        payload: -1,\r\n      });\r\n    } else {\r\n      if (status === \"like\") {\r\n        //save to the database， should update reaction\r\n        const newReaction = {\r\n          user_id: user.user_id,\r\n          like: false,\r\n          dislike: true,\r\n          post_id: props.value.post_id,\r\n        };\r\n        updateReaction(newReaction);\r\n\r\n        dispatch({\r\n          type: \"handle_like\",\r\n          payload: -1,\r\n        });\r\n      } else {\r\n        //save to the database， should create reaction\r\n        const newReaction = {\r\n          user_id: user.user_id,\r\n          like: false,\r\n          dislike: true,\r\n          post_id: props.value.post_id,\r\n        };\r\n        createReaction(newReaction);\r\n      }\r\n      setStatus(\"dislike\");\r\n      dispatch({\r\n        type: \"handle_dislike\",\r\n        payload: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const editPost = async (post) => {\r\n    navigate(\"/forum/EditPost\", { state: { p: post } });\r\n  };\r\n\r\n  const handleDeletePost = async (postID) => {\r\n    await deletePost(postID);\r\n    setShow(false);\r\n    // props.resetUser();\r\n    navigate(\"/forum/myPost\");\r\n    navigate(0);\r\n  };\r\n\r\n  const toFollowPage = async () => {\r\n    navigate(\"/follow\", { state: { f: props.value.user } });\r\n  };\r\n\r\n  //each form post\r\n  return (\r\n    <div className=\"border my-3 p-3\">\r\n      {props.page === \"myPost\" && (\r\n        <div>\r\n          <Row>\r\n            <Col>\r\n              {\" \"}\r\n              <img src=\"/ava.png\" alt=\"post-pic\" className=\"ava\" />\r\n            </Col>\r\n            <Col>\r\n              <h5 className=\"name\">{user.user_name}</h5>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n\r\n      {props.page === \"allPost\" &&\r\n        (props.value.user.user_id === user.user_id ? (\r\n          <div>\r\n            <Row>\r\n              <Col>\r\n                {\" \"}\r\n                <img src=\"/ava.png\" alt=\"post-pic\" className=\"ava\" />\r\n              </Col>\r\n              <Col>\r\n                <h5 className=\"name\">{user.user_name}</h5>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <button className=\"followbutton\" onClick={toFollowPage}>\r\n            <div>\r\n              <Row>\r\n                <Col>\r\n                  {\" \"}\r\n                  <img src=\"/ava.png\" alt=\"post-pic\" className=\"ava\" />\r\n                </Col>\r\n                <Col>\r\n                  <h5 className=\"othername\">{props.value.user.user_name}</h5>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </button>\r\n        ))}\r\n\r\n\r\n        {props.value.post_delete ===true && (\r\n          <div>[**** This post has been deleted by the admin ***]</div>\r\n        )}\r\n\r\n\r\n\r\n      {props.value.post_delete ===false && (\r\n        <div>\r\n<div dangerouslySetInnerHTML={{ __html: props.value.post_text } } className=\"eachPostText\"></div>\r\n      <div key=\"{props.value.post_id}\">\r\n        {props.value.post_pictureURL !== null && (\r\n          <img\r\n            alt=\"post img\"\r\n            style={{\r\n              maxHeight: \"100%\",\r\n              maxWidth: \"100%\",\r\n              width: \"auto\",\r\n              height: \"auto\",\r\n            }}\r\n            src={props.value.post_pictureURL}\r\n          ></img>\r\n        )}\r\n        {props.page === \"allPost\" && (\r\n          <div>\r\n            <button\r\n              className={status === \"like\" ? \"btnlike active\" : \"btnlike\"}\r\n              onClick={handleClickLike}\r\n            >\r\n              {status === \"like\" ? (\r\n                <span className=\"material-icons likeButton\">thumb_up</span>\r\n              ) : (\r\n                <span className=\"material-icons\">thumb_up_off_alt</span>\r\n              )}\r\n\r\n              <span>{likes}</span>\r\n            </button>\r\n\r\n            <button\r\n              className={status === \"dislike\" ? \"btnlike active \" : \"btnlike \"}\r\n              onClick={handleClickDislike}\r\n            >\r\n              {status === \"dislike\" ? (\r\n                <span className=\"material-icons disikeButton\">thumb_down</span>\r\n              ) : (\r\n                <span className=\"material-icons\">thumb_down_off_alt</span>\r\n              )}\r\n\r\n              <span>{dislikes}</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {props.page === \"allPost\" && (\r\n        <div className=\"replydiv\">\r\n          <NewReply post_id={props.value.post_id} replyTo_id={null} />\r\n        </div>\r\n      )}\r\n      {/* <div className=\"reply1Div\"> */}\r\n        {props.value.replies[0] !== null &&\r\n          props.value.replies.map(\r\n            (item) =>\r\n              item.replyTo_id === null && (\r\n                <div className=\"reply1Div\">\r\n                <>\r\n                  <ForEachReply\r\n                    key={item.reply_id}\r\n                    value={item}\r\n                    replies={props.value.replies}\r\n\r\n                  />\r\n                </>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n      {props.page === \"myPost\" && (\r\n        <div>\r\n          <button\r\n            className=\" edit material-icons md-36\"\r\n            onClick={() => editPost(props.value)}\r\n          >\r\n            edit\r\n          </button>\r\n          <button className=\"delete material-icons md-36\" onClick={handleShow}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n\r\n        </div>\r\n      )}\r\n\r\n\r\n      <Modal show={show} onHide={handleClose} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Post</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Do you Confirm to delete this Post? </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            CANCEL\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => handleDeletePost(props.value.post_id)}\r\n          >\r\n            CONFIRM\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForEachPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
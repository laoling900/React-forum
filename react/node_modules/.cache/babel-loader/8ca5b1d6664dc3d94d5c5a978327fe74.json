{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHubCode\\\\s3820906-s3746272-a2\\\\react\\\\src\\\\fragments\\\\MyFollowingPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { findUser, getFollowings, getFollowingsPosts, getOneUserPosts, getPosts } from \"../data/repository\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ForEachPost from \"../components/ForEachPost\";\nimport UserContext from \"../contexts/UserContext\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyFollowingPost() {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState([]);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function loadPosts() {\n      const currentPosts = await getFollowingsPosts(user.user_id);\n      setPosts(currentPosts);\n      setIsLoading(false);\n    }\n\n    loadPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Postdiv\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-muted\",\n      children: \"No any posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : posts.map(item => /*#__PURE__*/_jsxDEV(ForEachPost, {\n      value: item,\n      page: \"allPost\"\n    }, item.post_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyFollowingPost, \"7yUORk4kLhXDcpDJ9ZNWImi5S3k=\");\n\n_c = MyFollowingPost;\nexport default MyFollowingPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFollowingPost\");","map":{"version":3,"names":["React","useState","useEffect","Container","findUser","getFollowings","getFollowingsPosts","getOneUserPosts","getPosts","ForEachPost","UserContext","useContext","MyFollowingPost","user","setUser","isLoading","setIsLoading","posts","setPosts","loadPosts","currentPosts","user_id","length","map","item","post_id"],"sources":["E:/GitHubCode/s3820906-s3746272-a2/react/src/fragments/MyFollowingPost.js"],"sourcesContent":["import React ,{ useState, useEffect } from \"react\";\r\nimport { Container} from \"react-bootstrap\";\r\nimport { findUser, getFollowings, getFollowingsPosts, getOneUserPosts, getPosts} from \"../data/repository\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport ForEachPost from \"../components/ForEachPost\";\r\nimport UserContext from \"../contexts/UserContext\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction MyFollowingPost(){\r\n    const {user, setUser } = useContext(UserContext);\r\n    const[isLoading, setIsLoading ] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadPosts(){\r\n            const currentPosts = await getFollowingsPosts(user.user_id);\r\n            setPosts(currentPosts);\r\n            setIsLoading(false);\r\n        }\r\n        loadPosts();\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <div className=\"Postdiv\">\r\n        {isLoading ? \r\n        <div>Loading posts...</div>\r\n        :\r\n        posts.length === 0 ?\r\n        <span className=\"text-muted\">No any posts</span>\r\n        :\r\n       posts.map((item) =><ForEachPost key={item.post_id} value={item} page={\"allPost\"} />)\r\n    }\r\n\r\n     </div> \r\n    )\r\n}\r\n\r\n\r\nexport default MyFollowingPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,kBAAlC,EAAsDC,eAAtD,EAAuEC,QAAvE,QAAsF,oBAAtF;AACA,OAAO,iCAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,SAASC,eAAT,GAA0B;EAAA;;EACtB,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAmBH,UAAU,CAACD,WAAD,CAAnC;EACA,MAAK,CAACK,SAAD,EAAYC,YAAZ,IAA6Bf,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,eAAeiB,SAAf,GAA0B;MACtB,MAAMC,YAAY,GAAG,MAAMd,kBAAkB,CAACO,IAAI,CAACQ,OAAN,CAA7C;MACAH,QAAQ,CAACE,YAAD,CAAR;MACAJ,YAAY,CAAC,KAAD,CAAZ;IACH;;IACDG,SAAS;EACZ,CAPQ,EAOP,EAPO,CAAT;EAUA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,UACCJ,SAAS,gBACV;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADU,GAGVE,KAAK,CAACK,MAAN,KAAiB,CAAjB,gBACA;MAAM,SAAS,EAAC,YAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,GAGDL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBAAS,QAAC,WAAD;MAAgC,KAAK,EAAEA,IAAvC;MAA6C,IAAI,EAAE;IAAnD,GAAkBA,IAAI,CAACC,OAAvB;MAAA;MAAA;MAAA;IAAA,QAAnB;EAPC;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GA5BQb,e;;KAAAA,e;AA+BT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}
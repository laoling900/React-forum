{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHubCode\\\\s3820906-s3746272-a2\\\\react\\\\src\\\\fragments\\\\NewReply.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport UserContext from \"../contexts/UserContext\";\nimport { useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Accordion, Alert, Button, Col, Container, Row } from \"react-bootstrap\";\nimport { createReply } from \"../data/repository\";\nimport \"../css/NewReply.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewReply(props) {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handlePostReply = async e => {\n    e.preventDefault(); //save the reply\n\n    if (text.length === 0) {\n      setErrorMessage(\"can not reply empty value!\");\n      return;\n    } else if (text.length >= 201) {\n      setErrorMessage(\"Can not enter more that 200 characters !  \");\n      return;\n    }\n\n    const reply = {\n      reply_text: text,\n      post_id: props.post_id,\n      user_id: user.user_id,\n      replyTo_id: props.replyTo_id\n    };\n    await createReply(reply);\n    await navigate(\"/forum/allPost\");\n    navigate(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons \",\n            children: \"reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), \"Reply\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n              maxLength: \"200\",\n              role: \"dialog\",\n              className: \"mb-5\",\n              theme: \"snow\",\n              value: text,\n              onChange: setText // modules={{\n              // } }\n              ,\n              placeholder: \"Replay here...\",\n              style: {\n                height: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handlePostReply,\n                children: \"CONFIRM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), errorMessage !== \"\" && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewReply, \"ZIfrFcLQ+mOCbZkRyVPXmYQIKwA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = NewReply;\nexport default NewReply;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewReply\");","map":{"version":3,"names":["React","useState","ReactQuill","UserContext","useContext","useNavigate","useLocation","Accordion","Alert","Button","Col","Container","Row","createReply","NewReply","props","errorMessage","setErrorMessage","text","setText","user","setUser","navigate","location","handlePostReply","e","preventDefault","length","reply","reply_text","post_id","user_id","replyTo_id","height"],"sources":["E:/GitHubCode/s3820906-s3746272-a2/react/src/fragments/NewReply.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport UserContext from \"../contexts/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Accordion, Alert, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { createReply } from \"../data/repository\";\r\nimport \"../css/NewReply.css\";\r\n\r\nfunction NewReply(props) {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const { user, setUser } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n\r\n\r\n  const handlePostReply = async (e) => {\r\n    e.preventDefault();\r\n    //save the reply\r\n\r\n    if(text.length ===0 ){\r\n      setErrorMessage(\"can not reply empty value!\");\r\n      return\r\n    }else if(text.length >=201){\r\n      setErrorMessage(\"Can not enter more that 200 characters !  \");\r\n      return\r\n    }\r\n\r\n\r\n    const reply = {\r\n      reply_text: text,\r\n      post_id: props.post_id,\r\n      user_id: user.user_id,\r\n      replyTo_id: props.replyTo_id,\r\n    };\r\n    await createReply(reply);\r\n    await navigate(\"/forum/allPost\");\r\n    navigate(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Accordion>\r\n          <Accordion.Header className=\"header\">\r\n            <span className=\"material-icons \">reply</span>\r\n            Reply\r\n          </Accordion.Header>\r\n\r\n          <Accordion.Body>\r\n            <Row>\r\n              <ReactQuill\r\n                maxLength=\"200\"\r\n                role=\"dialog\"\r\n                className=\"mb-5\"\r\n                theme=\"snow\"\r\n                value={text}\r\n                onChange={setText}\r\n                // modules={{\r\n                \r\n                // } }\r\n                placeholder= \"Replay here...\"\r\n                style={{ height: \"100px\" }}\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button variant=\"primary\" onClick={handlePostReply}>\r\n                  CONFIRM\r\n                </Button>\r\n\r\n                {errorMessage!==\"\" && <Alert variant=\"danger\">{errorMessage}</Alert>  }\r\n                </Col>\r\n\r\n            </Row>\r\n          </Accordion.Body>\r\n        </Accordion>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewReply;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}